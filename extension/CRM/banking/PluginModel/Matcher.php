<?php
/*
    org.project60.banking extension for CiviCRM

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
 *
 * @package org.project60.banking
 * @copyright GNU Affero General Public License
 * $Id$
 *
 */
abstract class CRM_Banking_PluginModel_Matcher extends CRM_Banking_PluginModel_Base {

  // ------------------------------------------------------
  // Functions to be provided by the plugin implementations
  // ------------------------------------------------------
  /** 
   * Report if the plugin is capable of batch matching (v2+?)
   * 
   * @return bool
   */
  function does_batch_matching() { return FALSE; }

  /** 
   * Generate a set of matches for the given bank transaction
   * 
   * @return array(match structures)
   */
  abstract function generate_matches($btx);

  /** 
   * Executes a previously generated match, i.e. the suggestion is accepted and realized
   * 
   * @val $match    match data as previously generated by this plugin instance
   * @val $btx      the bank transaction the match refers to
   * @return TODO: what?
   */
  abstract function execute_match( $match, $btx );


  /** 
   * Generate html code to visualize the given match. The visualization may also provide interactive form elements.
   * 
   * @val $match    match data as previously generated by this plugin instance
   * @val $btx      the bank transaction the match refers to
   * @return html code snippet
   */
  abstract function visualize_match( $match, $btx );


  /**
   * class constructor
   */ function __construct($config_name) {
    parent::__construct($config_name);

  }
}

